<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>personal project on EMMA KANG</title>
    <link>https://emma-kang.github.io/series/personal-project/</link>
    <description>Recent content in personal project on EMMA KANG</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&lt;a href=&#34;https://creativecommons.org/licenses/by-nc/4.0/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CC BY-NC 4.0&lt;/a&gt;</copyright>
    <lastBuildDate>Mon, 31 May 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://emma-kang.github.io/series/personal-project/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>[Personal] Spring Booking Web Service</title>
      <link>https://emma-kang.github.io/projects/spring-booking-webservice/</link>
      <pubDate>Mon, 31 May 2021 00:00:00 +0000</pubDate>
      
      <guid>https://emma-kang.github.io/projects/spring-booking-webservice/</guid>
      <description>This is personal project for study room booking webservice. The purpose of this project is to reinforce the knowledge of Spring framework, security, and Junit testing.
I am currently working on this project with learning testing online lecture.
@Service public class BookingServiceImpl implements BookingService { final static Logger logger = LoggerFactory.getLogger(BookingServiceImpl.class); private final BookingDAO bookingDAO; public BookingServiceImpl(BookingDAO bookingDAO) { this.bookingDAO = bookingDAO; } @Override public BookingDTO getBookingInfoByUserId(int userid) { return bookingDAO.</description>
    </item>
    
    <item>
      <title>[Personal] Express bookbox API</title>
      <link>https://emma-kang.github.io/projects/express-bookbox/</link>
      <pubDate>Sun, 12 Jul 2020 00:00:00 +0000</pubDate>
      
      <guid>https://emma-kang.github.io/projects/express-bookbox/</guid>
      <description>This is a personal project to show book information stored in the database. I used Swagger for API documentation. The purpose of this project is to learn Node.js and Express as back-end code.
Tech stack  Node.js (Express) PostgreSQL  Swagger docs
Github Code
For front-end part, I used React.js and the code was commit to different repository.
Github Frontend repository</description>
    </item>
    
    <item>
      <title>[Personal] Django Rest API</title>
      <link>https://emma-kang.github.io/projects/django-rest-api/</link>
      <pubDate>Fri, 08 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://emma-kang.github.io/projects/django-rest-api/</guid>
      <description>This is simple survey API with Python and Django. The API was implemented by using Django REST framework and the webservice only allow GET.
The sample data was stored on PostgreSQLServer and deployed on Heroku.
Github
https://stark-citadel-85128.herokuapp.com/api/</description>
    </item>
    
    <item>
      <title>[Personal] Spring Web Board</title>
      <link>https://emma-kang.github.io/projects/spring-web-board/</link>
      <pubDate>Wed, 06 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://emma-kang.github.io/projects/spring-web-board/</guid>
      <description>This is personal project for Web board with Spring framework. Users can create/read/update/delete posting on the board. Basically, the web board built with Spring MVC and Thymeleaf template view engine.
Tech Stack  Java Spring MVC MySQL, Hibernate Thymeleaf  @Controller public class WritePostController { private PostDTO postDTO; private PostService postService; private UserService userService; @Autowired public void setUserService(@Qualifier(&amp;#34;userService&amp;#34;) UserService us) { this.userService = us; } @Autowired public void setPostService(@Qualifier(&amp;#34;postService&amp;#34;) PostService ps) { this.</description>
    </item>
    
  </channel>
</rss>
